10 ' TURN QUEST
20 ' MORRI 2017
30 ' FORCE SPRITE @ &9BD0
40 ' OVERLAY SPRITE @ &9C05
50 ' SPRITES START @ 9C77 - EVERY 66 BYTES
60 ' CODE BY MORRI 2017
70 ' MUSIC BY MR LOU
80 ' GAME INSPIRED BY FIRE & BRIMSTONE BY BENJAMIN SOULE
90 DEFINT a-z
100 IF PEEK(&9BD0)<>0 THEN 140
110 MEMORY &9BD0-1
120 LOAD"sprites.bin",&9BD0
130 LOAD"sprites.bnk",&9C74
140 DIM map(11,11),map2(11,11),map3(5,5)
150 DIM ma(100),mb(100),mc(1000)
160 ENV 1,15,1,1,15,-1,1:ENT 1,2,1,1,2,-1,1
170 ENV 2,5,3,3,1,-21,22,9,-3,2:ENT 2,10,2,2,5,-7,1,2,11,3,2,-4,8
180 ENT 3,20,-125,1
190 ENT 4,100,-2,2
200 MODE 0:BORDER 0
210 RESTORE 220:FOR a=0 TO 15:READ b:INK a,b:NEXT
220 DATA &00,&04,&10,&11,&1a,&01,&0b,&14,&0e,&03,&06,&0f,&18,&09,&12,&16
230 PEN 4:PEN#1,4
240 LOCATE 1,1:PRINT"WOULD YOU LIKE HELP?"
250 PRINT"<Y/N>"
260 IF INKEY(43)=0 THEN GOSUB 4370:GOTO 290
270 IF INKEY(46)=0 THEN CLS:GOTO 290
280 GOTO 260
290 WINDOW#1,6,15,3,22
300 WINDOW#2,17,20,1,24
310 WINDOW#3,1,4,19,24
320 RESTORE 2250
330 FOR y=0 TO 11
340 FOR x=0 TO 19
350 READ a
360 IF a<>0 THEN CALL &9BD0,(a*66)+&9C35,x*8,199-(y*16)
370 NEXT:NEXT
380 GOSUB 3620
390 CLS#1:LOCATE#1,1,5:PRINT#1,"TURN QUEST"
400 LOCATE#1,2,10:PRINT#1,"CPC VER."
410 PRINT#1," BY MORRI"
420 PRINT#1,"   2017"
430 CALL &BB03:WHILE INKEY$="":a=RND:WEND
440 SOUND 1+128,0:SOUND 2+128,0:SOUND 4+128,0
450 FOR b=1 TO 5
460 FOR a=1 TO 5
470 a1=INT(RND*5)+1
480 IF a1=1 THEN map3(a,b)=14
490 IF a1=2 THEN map3(a,b)=16
500 IF a1=3 THEN map3(a,b)=17
510 IF a1=4 THEN map3(a,b)=19
520 IF a1=5 THEN map3(a,b)=20
530 NEXT:NEXT
540 map3(3,3)=0
550 hero=36:level=0:turn=99:att=1:coin=0:heart=3:lives=3:x3=3:y3=3
560 CLS#1:CLS#2:CLS#3:level=level+1:ce=1
570 stat=level:GOSUB 1270:LOCATE 2,2:PRINT a$
580 GOSUB 1240
590 GOSUB 1250
600 GOSUB 1260
610 IF level=1 THEN RESTORE 2400
620 IF level=2 THEN RESTORE 2540
630 IF level=3 THEN RESTORE 2660
640 IF level=4 THEN RESTORE 2780
650 IF level=5 THEN RESTORE 2900
660 IF level=6 THEN RESTORE 3020
670 IF level=7 THEN RESTORE 3140
680 IF level=8 THEN RESTORE 3260
690 IF level=9 THEN RESTORE 3380
700 IF level=10 THEN RESTORE 3500
710 FOR y=1 TO 10
720 FOR x=1 TO 10
730 READ map(x,y)
740 map2(x,y)=0:GOSUB 1200
750 IF map(x,y)=15 OR map(x,y)=21 OR map(x,y)=34 THEN map2(x,y)=map(x,y):map(x,y)=22:GOSUB 1200:GOSUB 1220
760 NEXT:NEXT
770 READ x,y
780 GOSUB 1170
790 map2(x,y)=hero
800 GOSUB 1680
810 FOR a=1 TO 5:enn(a)=0:NEXT
820 READ en
830 FOR a=1 TO en
840 READ en(a),eatt(a),ecoin(a),elife(a)
850 enn(a)=a
860 ex(a)=(RND*10)+1:ey(a)=(RND*10)+1
870 IF map(ex(a),ey(a))<>22 OR map2(ex(a),ey(a))<>0 THEN 860
880 map2(ex(a),ey(a))=enn(a)
890 CALL &9C05,(en(a)*66)+&9C35,(ex(a)*8)+32,199-(ey(a)*16)
900 NEXT
910 ' Main game loop
920 IF INKEY(8)=0 AND x<>1 THEN xx=-1:yy=0:GOSUB 1020:GOTO 980
930 IF INKEY(1)=0 AND x<>10 THEN xx=1:yy=0:GOSUB 1020:GOTO 980
940 IF INKEY(0)=0 AND y<>1 THEN xx=0:yy=-1:GOSUB 1020:GOTO 980
950 IF INKEY(2)=0 AND y<>10 THEN xx=0:yy=1:GOSUB 1020:GOTO 980
960 IF INKEY(47)=0 THEN GOSUB 1310
970 IF INKEY(66)=0 THEN turn=0:GOSUB 2220
980 IF turn=0 THEN 380
990 IF map(x,y)=26 THEN 560
1000 IF level=10 AND x=2 AND y=1 THEN GOSUB 2230:GOTO 380
1010 GOTO 920
1020 ' Move Main Character
1030 IF map(x+xx,y+yy)>22 AND map(x+xx,y+yy)<26 THEN RETURN
1040 IF map2(x+xx,y+yy)=15 THEN z=1:GOSUB 1300:map2(x+xx,y+yy)=0:GOSUB 1110:GOSUB 1400:GOTO 1150
1050 IF map2(x+xx,y+yy)=21 THEN z=1:map2(x+xx,y+yy)=0:GOSUB 1110:GOSUB 1860:GOSUB 1400:GOTO 1150
1060 IF map2(x+xx,y+yy)=34 AND coin<10 THEN RETURN
1070 IF map2(x+xx,y+yy)=34 AND coin>14 THEN z=1:map2(x+xx,y+yy)=0:GOSUB 1110:coin=coin-15:GOSUB 1260:GOSUB 1860:GOSUB 1400:GOTO 1150
1080 FOR a=1 TO en
1090 IF map2(x+xx,y+yy)=enn(a) THEN GOSUB 1830:GOSUB 1570
1100 NEXT
1110 IF map2(x+xx,y+yy)=0 AND zz=0 THEN GOSUB 1200:map2(x,y)=0:x=x+xx:y=y+yy:map2(x,y)=hero:GOSUB 1170:GOSUB 1280
1120 IF map(x,y)=26 THEN RETURN
1130 IF z=0 THEN GOSUB 1400
1140 IF turn=0 THEN GOSUB 2220:RETURN
1150 z=0:zz=0:RETURN
1160 ' Print main character on map
1170 CALL &9C05,(hero*66)+&9C35,(x*8)+32,199-(y*16)
1180 RETURN
1190 ' Print sprite / Map tile
1200 CALL &9BD0,(map(x,y)*66)+&9C35,(x*8)+32,199-(y*16)
1210 RETURN
1220 CALL &9BD0,(map2(x,y)*66)+&9C35,(x*8)+32,199-(y*16)
1230 RETURN
1240 stat=turn:GOSUB 1270:LOCATE 2,6:PRINT a$:RETURN
1250 stat=att:GOSUB 1270:LOCATE 2,10:PRINT a$:RETURN
1260 stat=coin:GOSUB 1270:LOCATE 2,14:PRINT a$:RETURN
1270 a$=HEX$(6*(stat\10)+stat,2):RETURN
1280 CLS#2:turn=turn-1:GOSUB 1240
1290 RETURN
1300 SOUND 1,1500,10,12,0,3:turn=100:GOSUB 1240:RETURN
1310 cb=0:FOR ca=1 TO 5:IF enn(ca)=0 THEN cb=cb+1:NEXT
1320 IF cb=5 THEN RETURN
1330 IF enn(a)<>0 THEN CALL &9BD0,&A1E1,(ex(ce)*8)+32,199-(ey(ce)*16):CALL &9C05,(en(ce)*66)+&9C35,(ex(ce)*8)+32,199-(ey(ce)*16)
1340 ce=ce MOD 5+1
1350 IF enn(ce)=0 THEN 1340
1360 MOVE (ex(ce)*32)+128,399-(ey(ce)*32):DRAWR 30,0,4:DRAWR 0,-30,4:DRAWR -30,0,4:DRAWR 0,30,4
1370 a=ce:GOSUB 1580
1380 RETURN
1390 ' DETECT ENEMY STATS
1400 FOR a=1 TO 5:b=0:c=0
1410 IF enn(a)=0 THEN 1480
1420 IF map2(ex(a)-1,ey(a))=36 OR map2(ex(a)+1,ey(a))=36 OR map2(ex(a),ey(a)-1)=36 OR map2(ex(a),ey(a)+1)=36 THEN GOSUB 1530
1430 IF map2(ex(a)-1,ey(a))=37 OR map2(ex(a)+1,ey(a))=37 OR map2(ex(a),ey(a)-1)=37 OR map2(ex(a),ey(a)+1)=37 THEN GOSUB 1560
1440 IF x<ex(a) AND map(ex(a)-1,ey(a))=22 AND map2(ex(a)-1,ey(a))=0 THEN GOSUB 1500:ex(a)=ex(a)-1:GOSUB 1510:GOTO 1480
1450 IF x>ex(a) AND map(ex(a)+1,ey(a))=22 AND map2(ex(a)+1,ey(a))=0 THEN GOSUB 1500:ex(a)=ex(a)+1:GOSUB 1510:GOTO 1480
1460 IF y<ey(a) AND map(ex(a),ey(a)-1)=22 AND map2(ex(a),ey(a)-1)=0 THEN GOSUB 1500:ey(a)=ey(a)-1:GOSUB 1510:GOTO 1480
1470 IF y>ey(a) AND map(ex(a),ey(a)+1)=22 AND map2(ex(a),ey(a)+1)=0 THEN GOSUB 1500:ey(a)=ey(a)+1:GOSUB 1510:GOTO 1480
1480 NEXT
1490 RETURN
1500 CALL &9BD0,(map(ex(a),ey(a))*66)+&9C35,(ex(a)*8)+32,199-(ey(a)*16):map2(ex(a),ey(a))=0:RETURN
1510 IF enn(a)<>0 THEN CALL &9C05,(en(a)*66)+&9C35,(ex(a)*8)+32,199-(ey(a)*16):map2(ex(a),ey(a))=enn(a):RETURN
1520 IF enn(a)=0 THEN RETURN
1530 IF enn(a)<>0 THEN SOUND 1,2000,50,0,1,1,7:lives=lives-eatt(a):MOVE (x*32)+128,399-(y*32):DRAWR 30,-30,4:FOR loop=1 TO 500:NEXT:GOSUB 1680:GOSUB 1200:GOSUB 1170
1540 IF lives<1 THEN GOSUB 2220:GOTO 380
1550 IF enn(a)=0 THEN RETURN
1560 IF enn(a)<>0 AND hero=37 THEN SOUND 1,2000,50,0,1,1,7:MOVE (x*32)+128,399-(y*32):DRAWR 30,-30,4:hero=36:map2(x,y)=hero:GOSUB 1200:GOSUB 1170:RETURN
1570 IF enn(a)=0 THEN RETURN
1580 CLS#2:CALL &9BD0,(en(a)*66)+&9C35,136,199
1590 CALL &9BD0,&9FD1,136,135:stat=eatt(a):GOSUB 1270:LOCATE 19,10:PRINT a$
1600 CALL &9BD0,&A055,136,103:stat=ecoin(a):GOSUB 1270:LOCATE 19,14:PRINT a$
1610 IF elife(a)<1 THEN l(1)=0:l(2)=0:enn(a)=0:GOSUB 1500:map2(ex(a),ey(a))=0:CALL &9BD0,&A1E1,(ex(a)*8)+32,199-(ey(a)*16):CALL &9C05,&A055,(ex(a)*8)+32,199-(ey(a)*16):GOSUB 1850:CLS#2
1620 IF elife(a)>0 AND elife(a)<4 THEN l(1)=elife(a):l(2)=0
1630 IF elife(a)>3 AND elife(a)<7 THEN l(1)=3:l(2)=elife(a)-3
1640 FOR b=1 TO 2
1650 IF l(b)>0 THEN FOR c=1 TO l(b):CALL &9BD0,&A097,(c*8)+128,72-(b*16):NEXT
1660 NEXT
1670 RETURN
1680 c=&A0D9
1690 IF heart>9 THEN heart=9
1700 IF heart>0 AND heart<4 THEN l(1)=heart:l(2)=0:l(3)=0
1710 IF heart>3 AND heart<7 THEN l(1)=3:l(2)=heart-3:l(3)=0
1720 IF heart>6 THEN l(1)=3:l(2)=3:l(3)=heart-6
1730 GOSUB 1790
1740 c=&A097
1750 IF lives>9 THEN lives=9
1760 IF lives>0 AND lives<4 THEN l(1)=lives:l(2)=0:l(3)=0
1770 IF lives>3 AND lives<7 THEN l(1)=3:l(2)=lives-3:l(3)=0
1780 IF lives>6 THEN l(1)=3:l(2)=3:l(3)=lives-6
1790 FOR b=1 TO 3
1800 IF l(b)>0 THEN FOR aa=1 TO l(b):CALL &9BD0,c,(aa*8)-8,72-(b*16):NEXT
1810 NEXT
1820 RETURN
1830 IF enn(a)<>0 THEN SOUND 1,478,50,0,1,1,7:elife(a)=elife(a)-att:MOVE (ex(a)*32)+128,399-(ey(a)*32):DRAWR 30,-30,4:FOR loop=1 TO 500:NEXT:GOSUB 1500:GOSUB 1510
1840 RETURN
1850 SOUND 1,19,46,7,2,2:coin=coin+ecoin(a):map(x,y)=22:GOSUB 1260:FOR loop=1 TO 500:NEXT:CALL &9BD0,&A1E1,(ex(a)*8)+32,199-(ey(a)*16):zz=1:RETURN
1860 SOUND 1,142,140,15,0,4:map(x,y)=22
1870 CLS#1
1880 FOR a=1 TO 10
1890 IF a MOD 2=1 THEN RESTORE 2370 ELSE RESTORE 2380
1900 FOR b=1 TO 10
1910 READ c
1920 CALL &9BD0,(c*66)+&9C35,(b*8)+32,199-(a*16)
1930 NEXT:NEXT
1940 FOR a=1 TO 5
1950 FOR b=1 TO 5
1960 IF map3(b,a)<>0 THEN CALL &9C05,(map3(b,a)*66)+&9C35,(b*16)+28,207-(a*32)
1970 NEXT:NEXT
1980 CALL &9C05,(hero*66)+&9C35,(x3*16)+28,207-(y3*32)
1990 IF INKEY(8)=0 AND x3<>1 THEN GOSUB 2190:x3=x3-1:GOSUB 2140:GOTO 2040
2000 IF INKEY(1)=0 AND x3<>5 THEN GOSUB 2190:x3=x3+1:GOSUB 2140:GOTO 2040
2010 IF INKEY(0)=0 AND y3<>1 THEN GOSUB 2190:y3=y3-1:GOSUB 2140:GOTO 2040
2020 IF INKEY(2)=0 AND y3<>5 THEN GOSUB 2190:y3=y3+1:GOSUB 2140:GOTO 2040
2030 GOTO 1990
2040 SOUND 1,1500,10,12,0,3:map3(x3,y3)=0
2050 CALL &9C05,(hero*66)+&9C35,(x3*16)+28,207-(y3*32)
2060 CLS#1
2070 FOR a=1 TO 10
2080 FOR b=1 TO 10
2090 CALL &9BD0,(map(b,a)*66)+&9C35,(b*8)+32,199-(a*16)
2100 IF map2(b,a)>10 THEN CALL &9C05,(map2(b,a)*66)+&9C35,(b*8)+32,199-(a*16)
2110 IF map2(b,a)>0 AND map2(b,a)<10 THEN c=map2(b,a):CALL &9C05,(en(c)*66)+&9C35,(b*8)+32,199-(a*16)
2120 NEXT:NEXT
2130 RETURN
2140 IF map3(x3,y3)=19 THEN lives=heart:GOSUB 1680
2150 IF map3(x3,y3)=17 THEN heart=heart+1:lives=heart:GOSUB 1680
2160 IF map3(x3,y3)=16 THEN coin=coin+5:GOSUB 1260
2170 IF map3(x3,y3)=14 THEN att=att+1:GOSUB 1250
2180 IF map3(x3,y3)=20 THEN hero=37:map2(x,y)=hero
2190 CALL &9BD0,&9C77,(x3*16)+24,215-(y3*32):CALL &9BD0,&9CB9,(x3*16)+32,215-(y3*32)
2200 CALL &9BD0,&9CFB,(x3*16)+24,199-(y3*32):CALL &9BD0,&9D3D,(x3*16)+32,199-(y3*32)
2210 RETURN
2220 CLS#1:LOCATE#1,1,8:PRINT#1,"GAME OVER!":CALL &BB03:CALL &BB18:RETURN
2230 CLS#1:LOCATE#1,1,2:PRINT#1," MY HERO!":PRINT#1:PRINT#1,"I AM SAVED":PRINT#1,"THANX 2 U!":CALL &BB03:CALL &BB18:GOSUB 2220:RETURN
2240 ' MAIN SCREEN SETUP
2250 DATA 13,0,0,0,5,6,6,6,6,6,6,6,6,6,6,7,0,0,0,0
2260 DATA 0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2270 DATA 15,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2280 DATA 0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2290 DATA 14,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2300 DATA 0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2310 DATA 16,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2320 DATA 0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2330 DATA 0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2340 DATA 0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2350 DATA 0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0
2360 DATA 0,0,0,0,10,11,11,11,11,11,11,11,11,11,11,12,0,0,0,0
2370 DATA 1,2,1,2,1,2,1,2,1,2
2380 DATA 3,4,3,4,3,4,3,4,3,4
2390 ' LEVEL 1 DATA
2400 DATA 23,21,22,23,23,23,23,22,22,23
2410 DATA 22,23,22,22,22,22,22,22,23,26
2420 DATA 22,22,22,22,22,22,22,23,22,22
2430 DATA 23,22,22,23,22,22,23,22,22,23
2440 DATA 23,22,22,22,24,24,22,22,22,23
2450 DATA 23,22,22,22,25,25,22,22,22,23
2460 DATA 23,22,22,23,22,22,23,22,22,23
2470 DATA 22,22,22,22,22,22,22,22,22,22
2480 DATA 22,23,22,22,22,22,22,22,23,22
2490 DATA 23,22,22,23,23,23,23,22,15,23
2500 ' PLAYER STARTING POS (x,y)
2510 DATA 1,9
2520 ' ENEMY DATA
2530 DATA 1,27,1,1,1
2540 DATA 22,22,22,22,22,22,22,22,22,22
2550 DATA 22,23,23,23,23,22,23,22,23,22
2560 DATA 22,22,22,26,23,22,23,22,23,22
2570 DATA 22,23,23,23,23,22,23,21,23,22
2580 DATA 22,22,22,22,22,22,23,23,23,22
2590 DATA 22,23,23,23,22,22,22,22,22,22
2600 DATA 22,23,15,23,22,23,23,23,23,22
2610 DATA 22,23,22,23,22,23,22,22,22,22
2620 DATA 22,23,22,23,22,23,23,23,23,22
2630 DATA 22,22,22,22,22,22,22,22,22,22
2640 DATA 7,8
2650 DATA 3,27,1,1,2,28,1,3,2,30,1,2,1
2660 DATA 21,22,22,22,22,22,22,22,22,15
2670 DATA 22,22,22,22,22,22,22,22,22,22
2680 DATA 22,22,24,24,24,24,24,24,22,22
2690 DATA 22,22,25,23,25,25,23,25,22,22
2700 DATA 22,22,25,24,25,25,24,25,22,22
2710 DATA 22,22,25,25,25,25,25,25,22,22
2720 DATA 22,22,25,23,25,25,23,25,22,22
2730 DATA 22,22,25,24,25,25,24,25,22,22
2740 DATA 23,23,22,22,22,22,22,22,22,22
2750 DATA 26,22,22,22,22,22,22,22,22,34
2760 DATA 1,8
2770 DATA 4,28,2,2,2,28,2,2,2,32,1,3,2,32,1,2,2
2780 DATA 22,22,22,21,23,22,22,22,22,22
2790 DATA 22,23,23,23,22,22,23,23,23,22
2800 DATA 22,23,22,22,22,22,22,22,23,22
2810 DATA 22,23,22,22,22,22,22,22,23,22
2820 DATA 22,22,22,22,24,24,22,22,22,23
2830 DATA 23,22,22,22,25,25,22,22,22,22
2840 DATA 26,23,22,22,22,22,22,22,23,22
2850 DATA 22,23,22,22,22,22,22,22,23,22
2860 DATA 22,23,23,23,22,22,23,23,23,22
2870 DATA 22,22,22,22,22,23,15,22,22,22
2880 DATA 10,4
2890 DATA 4,27,1,1,2,27,1,2,2,27,2,3,2,27,2,2,1
2900 DATA 23,23,22,23,24,24,23,26,23,23
2910 DATA 23,22,22,22,25,25,22,22,22,23
2920 DATA 22,22,23,22,23,23,22,23,22,22
2930 DATA 23,22,22,22,22,23,22,22,22,23
2940 DATA 22,22,23,22,15,23,23,23,22,22
2950 DATA 22,22,23,23,23,22,22,23,22,22
2960 DATA 23,22,22,22,23,22,22,22,22,23
2970 DATA 22,22,23,22,23,23,22,23,22,22
2980 DATA 23,22,22,22,22,22,22,22,22,23
2990 DATA 23,23,22,23,22,22,23,21,23,23
3000 DATA 2,2
3010 DATA 3,28,1,2,3,32,1,2,3,28,1,2,3
3020 DATA 26,22,22,22,22,23,23,22,22,21
3030 DATA 23,23,23,23,22,23,23,22,24,22
3040 DATA 22,23,22,22,22,22,22,22,22,22
3050 DATA 22,23,22,24,22,23,23,22,23,23
3060 DATA 22,22,22,22,22,23,23,22,23,23
3070 DATA 23,23,22,23,23,22,22,22,22,22
3080 DATA 23,23,22,23,23,22,24,22,23,22
3090 DATA 22,22,22,22,22,22,22,22,23,22
3100 DATA 22,24,22,23,23,22,23,23,23,23
3110 DATA 15,22,22,23,23,22,22,22,22,34
3120 DATA 6,6
3130 DATA 4,27,2,2,3,28,3,2,3,30,2,2,4,32,3,2,3
3140 DATA 24,23,23,23,23,23,23,23,26,24
3150 DATA 23,15,22,22,23,23,22,22,22,23
3160 DATA 23,22,24,22,22,22,22,24,22,23
3170 DATA 23,22,22,24,22,22,24,22,22,23
3180 DATA 23,23,22,22,24,24,22,22,23,23
3190 DATA 23,23,22,22,25,25,22,22,23,23
3200 DATA 23,22,22,24,22,22,24,22,22,23
3210 DATA 23,22,24,22,22,22,22,24,22,23
3220 DATA 23,22,22,22,23,23,22,22,21,23
3230 DATA 24,23,23,23,23,23,23,23,23,24
3240 DATA 2,9
3250 DATA 3,32,3,2,3,32,4,2,4,32,4,2,4
3260 DATA 22,22,22,22,24,24,22,22,22,22
3270 DATA 22,22,24,22,22,22,22,24,22,22
3280 DATA 22,24,22,22,24,24,22,22,24,22
3290 DATA 22,22,22,22,25,25,21,22,22,22
3300 DATA 24,22,24,24,25,25,24,24,22,24
3310 DATA 25,22,25,25,25,25,25,25,22,25
3320 DATA 22,22,22,22,25,25,22,22,22,22
3330 DATA 22,22,22,22,25,25,22,22,22,22
3340 DATA 24,15,24,22,22,22,22,24,26,24
3350 DATA 25,24,25,22,24,24,22,25,24,25
3360 DATA 1,1
3370 DATA 2,28,3,2,5,28,3,2,5
3380 DATA 23,24,24,22,22,22,22,24,24,23
3390 DATA 24,34,22,22,22,22,22,22,15,24
3400 DATA 25,24,22,22,24,24,22,22,24,25
3410 DATA 22,22,22,22,22,22,22,22,22,22
3420 DATA 22,22,24,22,23,23,22,24,22,22
3430 DATA 22,22,25,22,23,23,22,25,22,22
3440 DATA 22,22,22,22,22,22,22,22,22,22
3450 DATA 24,24,22,22,24,24,22,22,24,24
3460 DATA 25,21,22,22,22,22,22,22,26,25
3470 DATA 23,24,24,22,22,22,22,24,24,23
3480 DATA 5,1
3490 DATA 4,27,5,1,6,28,5,1,6,30,5,5,6,32,5,1,6
3500 DATA 35,22,22,22,22,22,22,22,22,22
3510 DATA 24,24,24,24,24,24,24,24,24,22
3520 DATA 25,25,25,22,22,22,22,25,25,22
3530 DATA 22,22,22,22,22,22,22,22,22,22
3540 DATA 22,24,24,24,24,24,24,24,24,24
3550 DATA 22,25,25,22,22,22,22,25,25,25
3560 DATA 22,22,22,22,22,22,22,22,22,22
3570 DATA 24,24,24,24,24,24,24,24,24,22
3580 DATA 25,25,25,22,22,22,22,25,25,22
3590 DATA 22,22,22,22,22,22,22,22,22,22
3600 DATA 1,10
3610 DATA 4,28,5,0,6,28,5,0,6,28,5,0,6,28,5,0,6
3620 ENV 11,15,-1,8:ENV 12,15,-1,1,15,-1,1,15,-1,1,15,-1,1:ENV 13,15,-1,4:ENV 14,15,5,3,15,-1,1
3630 me=0
3640 RESTORE 3750
3650 ma=1:mb=1:mc=1
3660 READ ma(ma)
3670 IF ma(ma)=-1 THEN 3690
3680 ma=ma+1:GOTO 3660
3690 READ mb(mb)
3700 IF mb(mb)=-1 THEN 3720
3710 mb=mb+1:GOTO 3690
3720 READ mc(mc)
3730 IF mc(mc)=-1 THEN 4150
3740 mc=mc+1:GOTO 3720
3750 DATA 716,716,716,716,716,716,716,716
3760 DATA 956,956,956,956,956,956,956,956
3770 DATA 851,851,851,851,851,851,851,851
3780 DATA 1136,1136,1136,1136,1136,1136,1136,1136
3790 DATA 1073,1073,1073,1073,1073,1073,1073,1073
3800 DATA 1432,1432,1432,1432,1432,1432,1432,1432
3810 DATA 1136,1136,1136,1136,1136,1136,1136,1136
3820 DATA 956,956,956,956,956,956,956,956,-1
3830 DATA 142,239,179,142,0,142,179,0
3840 DATA 159,239,190,159,0,159,190,0
3850 DATA 179,284,213,179,0,179,213,0
3860 DATA 190,284,239,190,0,190,239,0
3870 DATA 213,358,268,213,0,213,268,0
3880 DATA 239,358,284,239,0,239,284,0
3890 DATA 239,379,284,239,0,239,284,0
3900 DATA 239,379,319,239,0,239,319,0,-1
3910 DATA 0,0,0,0,0,0,0,0
3920 DATA 0,0,0,0,478,426,426,379
3930 DATA 426,426,426,426,426,426,426,426
3940 DATA 478,478,478,478,478,478,478,478
3950 DATA 536,536,536,536,536,536,536,536
3960 DATA 716,716,716,716,716,716,716,716
3970 DATA 568,568,568,568,568,568,568,568
3980 DATA 478,478,478,478,478,478,478,478
3990 DATA 0,0,0,0,0,0,0,0
4000 DATA 0,0,0,0,239,213,213,190
4010 DATA 213,213,213,213,213,213,213,213
4020 DATA 239,239,239,239,239,239,239,239
4030 DATA 268,268,268,268,268,268,268,268
4040 DATA 358,358,358,358,358,358,358,358
4050 DATA 284,284,284,284,284,284,284,284
4060 DATA 239,239,239,239,239,239,239,239
4070 DATA 71,89,71,60,119,89,71,60
4080 DATA 80,95,80,60,119,95,80,60
4090 DATA 89,106,89,71,142,106,89,71
4100 DATA 95,119,95,71,142,119,95,71
4110 DATA 106,134,106,89,179,134,106,89
4120 DATA 119,142,119,89,179,142,119,89
4130 DATA 119,142,119,95,190,142,119,95
4140 DATA 119,159,119,95,190,159,119,95,-1
4150 ma=1:mb=1:mc=1
4160 SOUND 1,0,20,0:SOUND 2,0,20,0
4170 GOSUB 4190:GOSUB 4230:GOSUB 4300
4180 GOTO 4360
4190 SOUND 1,ma(ma),30,15
4200 ma=ma+1:IF ma(ma)=-1 THEN ma=1
4210 ON SQ(1) GOSUB 4190
4220 RETURN
4230 IF mb(mb)=0 AND mc>129 THEN SOUND 2,0,30,15,13,0,10:mr=1
4240 IF mb(mb)=0 AND mc<=129 THEN SOUND 2,0,30,13,12,0,1:mr=1
4250 IF mr=1 THEN mr=0:GOTO 4270
4260 SOUND 2,mb(mb),30,15,11
4270 mb=mb+1:IF mb(mb)=-1 THEN mb=1
4280 ON SQ(2) GOSUB 4230
4290 RETURN
4300 IF mc(mc)=0 THEN SOUND 4,0,30,0:GOTO 4330
4310 IF mc>128 THEN me=14
4320 SOUND 4,mc(mc),30,14,me
4330 mc=mc+1:IF mc(mc)=-1 THEN mc=129
4340 ON SQ(4) GOSUB 4300
4350 RETURN
4360 RETURN
4370 CLS:s=36:x=1:y=1:GOSUB 4820
4380 LOCATE 3,1:PRINT"YOU - THE HERO"
4390 s=35:y=3:GOSUB 4820
4400 LOCATE 3,5:PRINT"SAVE THE PRINCESS"
4410 LOCATE 1,9:PRINT"CURSOR KEYS TO MOVE"
4420 LOCATE 1,13:PRINT"SPACE TO SCROLL THRU"
4430 LOCATE 1,14:PRINT"ENEMIES STATS"
4440 LOCATE 1,18:PRINT"ESC TO QUIT"
4450 GOSUB 4810
4460 s=13:x=1:y=1:GOSUB 4820
4470 LOCATE 3,1:PRINT"LEVEL"
4480 s=15:y=3:GOSUB 4820
4490 LOCATE 3,5:PRINT"STEPS REMAINING"
4500 LOCATE 3,6:PRINT"RESET STEPS TO 99"
4510 s=14:y=5:GOSUB 4820
4520 LOCATE 3,9:PRINT"ATTACK STAT"
4530 LOCATE 3,10:PRINT"DAMAGE TO ENEMIES"
4540 s=16:y=7:GOSUB 4820
4550 LOCATE 3,13:PRINT"COINS COLLECTED"
4560 s=17:y=9:GOSUB 4820
4570 LOCATE 3,17:PRINT"HEALTH REMAINING"
4580 LOCATE 3,18:PRINT"9 MAXIMUM"
4590 GOSUB 4810
4600 s=26:y=1:GOSUB 4820
4610 LOCATE 3,1:PRINT"EXIT LEVEL"
4620 s=21:y=3:GOSUB 4820
4630 LOCATE 3,5:PRINT"TO POWERUP PAGE"
4640 s=34:y=5:GOSUB 4820
4650 LOCATE 3,9:PRINT"TO POWERUP PAGE"
4660 LOCATE 3,10:PRINT"COST = 15 COINS"
4670 GOSUB 4810
4680 LOCATE 1,1:PRINT"ON POWERUP PAGE"
4690 s=14:y=3:GOSUB 4820
4700 LOCATE 3,5:PRINT"INCREASE ATTACK"
4710 s=17:y=5:GOSUB 4820
4720 LOCATE 3,9:PRINT"INCREASE HEARTS"
4730 s=19:y=7:GOSUB 4820
4740 LOCATE 3,13:PRINT"REPLENSH HEALTH"
4750 s=20:y=9:GOSUB 4820
4760 LOCATE 3,17:PRINT"SHEILD FOR 1 HIT"
4770 s=16:y=11:GOSUB 4820
4780 LOCATE 3,21:PRINT"+5 COINS"
4790 GOSUB 4810
4800 RETURN
4810 LOCATE 1,25:PRINT"<PRESS ANY KEY>":CALL &BB03:CALL &BB18:CLS:RETURN
4820 CALL &9BD0,(s*66)+&9C35,(x*8)-8,215-(y*16)
4830 RETURN