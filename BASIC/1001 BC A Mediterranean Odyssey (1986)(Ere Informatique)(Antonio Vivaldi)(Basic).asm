10 POKE &BB5A,&CF
20 ON BREAK GOSUB 1630
30 REM odinit
40 MEMORY &2FFF
50 REM-----------------------------
60 MODE 0
61 DATA &21,&94,&00,&11,&c0,&73,&06,&03,&cd,&77,&bc,&21,&00,&a0,&cd,&83,&bc,&c3,&7a,&bc,&31,&2e,&65 
63 RESTORE 61:FOR i=&80 TO &80+22:READ a:POKE i,a:NEXT 
64 CALL &80
70 RESTORE 80:FOR i=0 TO 15:READ a:INK i,a:NEXT
80 DATA 0,26,16,9,19,21,25,10,20,1,2,11,3,6,7,15
90 LOAD"odyssee.scn",&C000
100 GOSUB 1010 'musique
110 REM chainage mica
120 LOAD"micab.bin"
130 de=&7C90
140 hl=&8099
150 b=24
160 de=de+1:hl=hl+&100
170 POKE de,PEEK(hl)
180 b=b-1:IF b<>0 THEN 160
190 IF PEEK(6)=&80 THEN 390
200 V1=&B285:v2=&B28D:re=1185
210 z1=&9300:z2=&93FC:GOSUB 1400
220 v1=&B28F:v2=&B290:re=1184:GOSUB 1400 '2eme partie txt
230 v1=&B32C:v2=&B338:re=875
240 z1=&8068:z2=&8122:GOSUB 1400
250 v1=&B342:v2=&B346:re=867:GOSUB 1400
260 POKE &800A,&C5:POKE &800B,&B7
270 POKE &960F,&B5:POKE &9610,&B6
280 POKE &8DC2,&26:POKE &8DC3,&B7
290 POKE &8DD5,&26:POKE &8DD6,&B7
300 POKE &84F4,&27:POKE &84F5,&B7
310 POKE &84F8,&2C:POKE &84F9,&B7
320 POKE &932E,&2F:POKE &932F,&B7
330 POKE &8548,&2F:POKE &8549,&B7
340 POKE &856D,&2F:POKE &856E,&B7
350 POKE &8575,&2F:POKE &8576,&B7
360 POKE &8587,&2F:POKE &8588,&B7
370 POKE &879C,&2F:POKE &879D,&B7
380 POKE &8783,&2F:POKE &8784,&B7
390 REM
400 REM----init zone des variables----
410 FOR i=&AB00 TO &AB80:POKE i,0:NEXT
420 FOR i=&AD00 TO &ADA0:POKE i,0:NEXT
430 POKE 0,201 'ret auto
440 POKE &9F,32 'securite buffer
450 POKE &AB10,&40:POKE &AB11,&AB 'ptipil
460 POKE &AB1C,&50:POKE &AB1D,&AB 'ptant
470 POKE &AB2A,&4A:POKE &AB2B,&A6 'wind
480 POKE &AB2C,&10:POKE &AB2D,1 'debg
490 POKE &AB2E,104 'vtecnv
500 POKE &AB2F,4:POKE &AB30,4 'tranxy
510 POKE &AB31,16:POKE &AB32,0 'ctecrx
520 POKE &AB33,199:POKE &AB34,0 'ctecry
530 POKE &AB62,&0:POKE &AB63,&3F ' mic
540 POKE &AB64,&0:POKE &AB65,&9B 'voc
550 POKE &AB66,&0:POKE &AB67,&A3 'sond
560 POKE &AB68,&0:POKE &AB69,&A4 'cord
570 POKE &AB6C,&5C:POKE &AB6D,&A6 'empr
580 POKE &AB6E,&0:POKE &AB6F,&98 'rej
590 POKE &AB70,&B0:POKE &AB71,&99 'rep
600 POKE &AB74,&40:POKE &AB75,&A4 'dir
610 POKE &AB76,&D0:POKE &AB77,&A5 'obj
620 POKE &AB78,&0:POKE &AB79,&A6 'var
630 POKE &AB7A,&74:POKE &AB7B,&A6 'obe
640 POKE &AD02,&A0 'pbuff
650 POKE &AD06,50 'count
660 POKE &AD1B,2 'mode
670 REM option
680 POKE &AB13,1
690 POKE &AB14,1
700 POKE &AB15,1
710 POKE &AD10,0:POKE &AD11,1
720 FOR i=&AB00 TO &AB80:POKE i-&5B0,PEEK(i):NEXT 'transfert en lieu sur
730 REM ---init graphique----
740 LOAD"p6.bin"
750 BORDER 1
760 DATA 0,2,1,11,12,9,18,24,15,3,6,10,16,13,25,26
770 RESTORE 760:FOR i=0 TO 15:READ coul:INK i,coul:NEXT
780 LOCATE 1,18
790 PAPER 2:PEN 3
800 WINDOW #1,1,20,14,16 'items
810 WINDOW #2,1,20,17,23 'fenetre principale
820 WINDOW #3,14,20,13,13 'direction du vent
830 WINDOW #4,1,20,24,25  'clavier
840 PAPER #1,2:PAPER #2,2:PEN #4,3
850 IF PEEK(6)=&80 THEN POKE &B21C+10,0:POKE &B22B+10,85:POKE &B23A+10,64:POKE &B249+10,192 'encres 
860 IF PEEK(6)<>&80 THEN POKE &B6C4+9,0:POKE &B6D2+9,85:POKE &B6E0+9,64:POKE &B6EE+9,192
870 POKE &3EFD,253:POKE &3EFE,255 'fin bloc graphique
880 REM-----Starring-------
890 PEN #2,5
900 PRINT#2,"CONCEPTION"
910 PRINT#2,"     REALISATION:"
920 PEN #2,6
930 PRINT#2,"  Pierre Giroud"
940 PRINT#2
950 PEN #2,5
960 PRINT#2,"     MUSIQUE:"
970 PEN #2,6
980 PRINT#2,"  Antonio Vivaldi"
990 IF PEEK(6)=&80 THEN POKE &B22B+10,85 ELSE POKE &B6D2+9,85 'restaure encre
1000 GOTO 1240
1010 REM------musique----------
1020 mus=&3000
1030 LOAD "vivaldi3.mus",mus
1040 d=0.5^(1/12)
1050 tempo=26
1060 ENV 1,2,-1,1,12,-1,8
1070  FOR n=mus+100 TO mus+2704 STEP 2
1080 a$=INKEY$:IF a$<>"" THEN 1220
1090 dd=PEEK(n+1)/12
1100 ddecho=PEEK(n-1)/12 
1110 ddecho2=PEEK(n-3)/12  
1120 ton=506*d^PEEK(n) 
1130 tonecho=1+506*d^PEEK(n-2)
1140 tonecho2=506*d^PEEK(n-6)  
1150 IF PEEK(n)=50 THEN ton=0    
1160 IF PEEK(n-2)=50 THEN tonecho=0
1170 IF PEEK(n-6)=50 THEN tonecho2=0 
1180 SOUND 1,ton,tempo*dd,15,1,1
1190 SOUND 2,tonecho2,tempo*ddecho2,12,1
1200 SOUND 4,tonecho,tempo*ddecho,12,1
1210 NEXT n    
1220 FOR i=1 TO 2000:NEXT
1225 CALL &A000
1230 RETURN
1240 REM---definitions enveloppes---
1250 ENV 1,10,1,5,1,0,20,10,-1,10
1260 ENV 2,2,-6,1
1270 ENV 4,12,-1,20
1280 ENV 5,4,2,4,1,0,40,8,-1,8
1290 ENT 5,16,-2,1,1,0,24,80,1,1
1300 ENV 6,15,1,4,1,0,30,15,-1,10
1310 ENT 6,10,-1,12,10,1,12
1320 ENV 14,8,1,10,4,0,10,8,-1,10
1330 ENT 14,40,-4,2,20,0,2,40,8,2
1340 ENV 15,1,2,2,14,-1,1
1350 REM---chargement lancement---
1360 DATA &21,&9f,&00,&11,&c0,&73,&06,&03,&cd,&77,&bc,&37,&21,&11,&01,&cd,&83,&bc
1370 DATA &cd,&7a,&bc,&cd,&60,&97,&af,&32,&48,&97,&c3,&80,&7d,&30,&2e,&64
1380 RESTORE 1360:FOR i=&80 TO &80+33:READ a:POKE i,a:NEXT
1390 CALL &80
1400 REM----adaptat.partielle----
1410 IF z1<0 THEN z1=z1+65536:z2=z2+65536
1420 IF v1<0 THEN v1=v1+65536:v2=v2+65536
1430 FOR z=z1 TO z2
1440 c=PEEK(z)+256*PEEK(z+1)
1450 IF c<v1 OR c>v2 THEN 1490
1460 c=c+re
1470 ob=256*(c/256-INT(c/256)):oh=INT(c/256)
1480 POKE z,ob:POKE z+1,oh
1490 NEXT z
1500 RETURN
1510 REM---chaineur loader---
1520 REM entree:id$,ac
1530 REM sortie:af
1540 REM utilisable seulement avec en-tete
1550 LOAD id$+".bin",&C000
1560 IF SGN(ac)=-1 THEN ac=ac+2^16
1570 POKE &14E,(ac/256-INT(ac/256))*256
1580 POKE &14F,INT (ac/256)
1590 CALL &150
1600 af=PEEK(&C000)+256*PEEK(&C001)
1610 PRINT id$;":";HEX$(ac);"-";HEX$(af)
1620 RETURN
1630 CALL 0